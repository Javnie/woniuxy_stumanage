package com.woniuxy.utility;

import java.lang.reflect.Field;
import java.sql.*;

public class DbHelper {
    public static Connection getConnection() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        }

        Connection connection = null;
        try {
            connection = DriverManager.getConnection("jdbc:mysql://18.162.120.240:3306/day021", "root", "123456");
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        return connection;
    }

    public static void executeSQL(String sql, Object... params) {
        PreparedStatement pstmt = null;
        try {
            pstmt = getConnection().prepareStatement(sql);
            for (int i = 0; i < params.length; i++) {
                pstmt.setObject(i + 1, params[i]);
            }
            pstmt.execute();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }

    /**
     * generated by CodeGeeX
     *
     * @param sql
     * @param o
     * @return
     */
//    public static <T> T executeSQL(String sql, Class<T> clazz, Object... params) {
//        T object = null;
//        PreparedStatement pstmt = null;
//        try {
//            pstmt = getConnection().prepareStatement(sql);
//            for (int i = 0; i < params.length; i++) {
//                pstmt.setObject(i + 1, params[i]);
//            }
//            ResultSet rs = pstmt.executeQuery();
//            ResultSetMetaData metaData = rs.getMetaData();
//            int columnCount = metaData.getColumnCount();
//            Field[] field = clazz.getDeclaredFields();
//            Map<String, Integer> map = new HashMap<>();
//            for (int i = 0; i < columnCount; i++) {
//                String columnName = metaData.getColumnName(i + 1);
//                map.put(columnName, i);
//            }
//            object = clazz.newInstance();
//            while (rs.next()) {
//                for (int i = 0; i < field.length; i++) {
//                    String fieldName = field[i].getName();
//                    Integer columnIndex = map.get(fieldName);
//                    Field field2 = clazz.getDeclaredField(fieldName);
//                    field2.setAccessible(true);
//                    field2.set(object, rs.getObject(columnIndex + 1));
//                }
//            }
//        } catch (InstantiationException | IllegalAccessException | SQLException | ClassNotFoundException e) {
//            throw new RuntimeException(e);
//        }
//        return object;
//    }
    public static Object executeSQL(String sql, Object o) {
        Field[] fields = o.getClass().getDeclaredFields();
        ResultSet resultSet = null;
        Object result = null;

        try {
            result = o.getClass().newInstance();
            PreparedStatement pstmt = getConnection().prepareStatement(sql);
            pstmt.setObject(1, o);
            resultSet = pstmt.executeQuery(sql);
            while (resultSet.next()) {
                for (int i = 0; i < fields.length; i++) {
                    fields[i].setAccessible(true);
                    fields[i].set(result, resultSet.getObject(i));
                }
            }
        } catch (InstantiationException e) {
            throw new RuntimeException(e);
        } catch (IllegalAccessException e) {
            throw new RuntimeException(e);
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        return result;
    }
}
